Name:          exference-core
Version:       0.15.0.2
Cabal-Version: >= 1.8
Build-Type:    Simple

Flag linkNodes
  description: nodes keep a reference to the precessor node, allowing returning
               the path thad lead to a solution.
  default: False

Flag buildSearchTree
  description: use dirty hacks to create the search tree that can be observed
               afterwards. needs link-nodes flag.
  default: False

Library
  --ghc-options: -fllvm
  ghc-options: -threaded
               -auto-all -caf-all -fno-spec-constr
               -rtsopts
               -O1
               -j
               -Wall
               -fno-warn-unused-imports
               -fno-warn-orphans
  
  If flag(linkNodes) || flag(buildSearchTree)
    cpp-options: -DLINK_NODES
  If flag(buildSearchTree)
    cpp-options: -DBUILD_SEARCH_TREE

  exposed-modules: Language.Haskell.ExferenceCore
                   Language.Haskell.Exference.Type
                   Language.Haskell.Exference.ConstrainedType
                   Language.Haskell.Exference.TypeClasses
                   Language.Haskell.Exference.ExferenceStats
                   Language.Haskell.Exference.Expression
                   Language.Haskell.Exference.FunctionBinding
                   Language.Haskell.Exference.SearchTree
                   Paths_exference_core
                   Flags_exference_core
  other-modules: Language.Haskell.Exference.Internal.Unify,
                 Language.Haskell.Exference.Internal.ConstraintSolver,
                 Language.Haskell.Exference.Internal.ExferenceNode,
                 Language.Haskell.Exference.Internal.ExferenceNodeBuilder,
                 Language.Haskell.Exference.Internal.Exference
  extensions: NoMonomorphismRestriction CPP
  hs-source-dirs: src
  Build-Depends:
    base >=3 && <5,
    containers,
    pretty >= 1.1,
    deepseq-generics,
    vector,
    mtl,
    hood,
    stable-memo,
    unordered-containers >= 0.2.5 && < 0.3,
    hashable,
    parsec,
    pqueue,
    list-t >= 0.2.3 && < 0.3,
    mmorph >= 1.0.4 && < 1.1
